load("@npm//@bazel/typescript:index.bzl", "ts_config", "ts_project")
load("@build_bazel_rules_nodejs//:index.bzl", "js_library", "pkg_npm", "copy_to_bin")
load("//src/dev/bazel:index.bzl", "jsts_transpiler")
load("@npm//@microsoft/api-extractor:index.bzl", "api_extractor")

PKG_BASE_NAME = "elastic-datemath"
PKG_REQUIRE_NAME = "@elastic/datemath"

SOURCE_FILES = glob([
  "src/index.ts",
])

SRCS = SOURCE_FILES

filegroup(
  name = "srcs",
  srcs = SRCS,
)

NPM_MODULE_EXTRA_FILES = [
  "package.json",
  "README.md",
]

TYPES_DEPS = [
  "@npm//moment",
  "@npm//@types/node",
]

DEPS = TYPES_DEPS

jsts_transpiler(
  name = "target_node",
  srcs = SRCS,
  build_pkg_name = package_name(),
)

ts_config(
  name = "tsconfig",
  src = "tsconfig.json",
  deps = [
    "//:tsconfig.base.json",
  ],
)

ts_project(
  name = "all_types",
  args = ['--pretty'],
  srcs = SRCS,
  deps = DEPS,
  declaration = True,
  declaration_map = True,
  emit_declaration_only = True,
  incremental = False,
  out_dir = "all_types",
  source_map = True,
  root_dir = "src",
  tsconfig = ":tsconfig",
)

copy_to_bin(
  name = "deps",
  srcs = [
    "tsconfig.json",
    "api-extractor.json",
    "package.json",
    ":srcs"
  ],
)

api_extractor(
 name = "types",
 chdir = "$(@D)",
 outs = ["types/datemath.d.ts", "types/datemath-beta.d.ts", "types/datemath-public.d.ts"],
 data = [":all_types", "//:copy_tsconfig_base", ":deps"],
 args = ["run", "--local", "--verbose", "--config", "api-extractor.json"]
)

js_library(
  name = PKG_BASE_NAME,
  srcs = NPM_MODULE_EXTRA_FILES,
  deps = DEPS + [":target_node"],
  package_name = PKG_REQUIRE_NAME,
  visibility = ["//visibility:public"],
)

pkg_npm(
  name = "npm_module",
  deps = [
    ":%s" % PKG_BASE_NAME,
  ]
)

filegroup(
  name = "build",
  srcs = [
    ":npm_module",
  ],
  visibility = ["//visibility:public"],
)
