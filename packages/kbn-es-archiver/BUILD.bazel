load("@npm//@bazel/typescript:index.bzl", "ts_config")
load("@build_bazel_rules_nodejs//:index.bzl", "js_library")
load("//src/dev/bazel:index.bzl", "jsts_transpiler", "pkg_npm", "pkg_npm_types", "ts_project")

PKG_BASE_NAME = "kbn-es-archiver"
PKG_REQUIRE_NAME = "@kbn/es-archiver"

SOURCE_FILES = glob(
  [
    "src/**/*.ts",
  ],
  exclude = [
    "**/*.test.*",
    "**/__fixtures__",
    "**/__mocks__",
    "**/__snapshots__"
  ],
)

SRCS = SOURCE_FILES

filegroup(
  name = "srcs",
  srcs = SRCS,
)

NPM_MODULE_EXTRA_FILES = [
  "package.json",
]

RUNTIME_DEPS = [
  "//packages/kbn-dev-utils",
  "//packages/kbn-test",
  "//packages/kbn-utils",
  "@npm//@elastic/elasticsearch",
  "@npm//aggregate-error",
  "@npm//chance",
  "@npm//globby",
  "@npm//json-stable-stringify",
  "@npm//lodash",
  "@npm//sinon",
]

TYPES_DEPS = [
  "//packages/kbn-dev-utils:npm_module_types",
  "//packages/kbn-test:npm_module_types",
  "//packages/kbn-tooling-log:npm_module_types",
  "//packages/kbn-utils:npm_module_types",
  "@npm//@elastic/elasticsearch",
  "@npm//aggregate-error",
  "@npm//globby",
  "@npm//@types/chance",
  "@npm//@types/jest",
  "@npm//@types/json-stable-stringify",
  "@npm//@types/lodash",
  "@npm//@types/node",
  "@npm//@types/sinon",
]

jsts_transpiler(
  name = "target_node",
  srcs = SRCS,
  build_pkg_name = package_name(),
  root_input_dir = "src",
)

js_library(
  name = PKG_BASE_NAME,
  srcs = NPM_MODULE_EXTRA_FILES,
  deps = RUNTIME_DEPS + [":target_node"],
  package_name = PKG_REQUIRE_NAME,
  visibility = ["//visibility:public"],
)

pkg_npm(
  name = "npm_module",
  deps = [
    ":%s" % PKG_BASE_NAME,
  ]
)

filegroup(
  name = "build",
  srcs = [
    ":npm_module",
  ],
  visibility = ["//visibility:public"],
)
